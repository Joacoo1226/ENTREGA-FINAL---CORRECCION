{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joako\\\\OneDrive\\\\Escritorio\\\\ENTREGA-FINAL-JOAQUIN--main\\\\src\\\\components\\\\ItemDetailContainer.js\",\n  _s = $RefreshSig$();\n// src/components/ItemDetailContainer.js\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// Lista de productos mock con imágenes y descripción\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockProducts = [{\n  id: 1,\n  name: 'IPHONE 15',\n  category: 'celulares',\n  price: 80,\n  description: 'El iPhone 15 cuenta con memoria RAM de alta velocidad, asegurando un rendimiento fluido en aplicaciones exigentes.',\n  image: '/images/iph15.jpg'\n}, {\n  id: 2,\n  name: 'Procesador Ryzen 9',\n  category: 'procesadores',\n  price: 300,\n  description: 'Procesador potente para gaming y trabajo, ideal para tareas multitarea.',\n  image: '/images/proce.jpg'\n}, {\n  id: 3,\n  name: 'Placa RTX 3060ti',\n  category: 'placas',\n  price: 500,\n  description: 'La NVIDIA GeForce RTX 3060 Ti es una tarjeta gráfica con 8 GB de memoria GDDR6, excelente para gaming de alto rendimiento.',\n  image: '/images/placa.jpg'\n}];\nconst ItemDetailContainer = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtener el id del producto desde la URL\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Buscar el producto correspondiente al id\n    const foundProduct = mockProducts.find(p => p.id === parseInt(id));\n    if (foundProduct) {\n      setProduct(foundProduct);\n      setError(null);\n    } else {\n      setError('Producto no encontrado.');\n    }\n    setLoading(false);\n  }, [id]); // Dependencia en id, para que recargue cuando cambie\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: product.image,\n      alt: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Precio: $\", product.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemDetailContainer, \"f7EN1YxU1YYnw9hNF8hKHfhzw/8=\", false, function () {\n  return [useParams];\n});\n_c = ItemDetailContainer;\nexport default ItemDetailContainer;\nvar _c;\n$RefreshReg$(_c, \"ItemDetailContainer\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","mockProducts","id","name","category","price","description","image","ItemDetailContainer","_s","product","setProduct","loading","setLoading","error","setError","foundProduct","find","p","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/joako/OneDrive/Escritorio/ENTREGA-FINAL-JOAQUIN--main/src/components/ItemDetailContainer.js"],"sourcesContent":["// src/components/ItemDetailContainer.js\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// Lista de productos mock con imágenes y descripción\nconst mockProducts = [\n  { id: 1, name: 'IPHONE 15', category: 'celulares', price: 80, description: 'El iPhone 15 cuenta con memoria RAM de alta velocidad, asegurando un rendimiento fluido en aplicaciones exigentes.', image: '/images/iph15.jpg' },\n  { id: 2, name: 'Procesador Ryzen 9', category: 'procesadores', price: 300, description: 'Procesador potente para gaming y trabajo, ideal para tareas multitarea.', image: '/images/proce.jpg' },\n  { id: 3, name: 'Placa RTX 3060ti', category: 'placas', price: 500, description: 'La NVIDIA GeForce RTX 3060 Ti es una tarjeta gráfica con 8 GB de memoria GDDR6, excelente para gaming de alto rendimiento.', image: '/images/placa.jpg' },\n];\n\nconst ItemDetailContainer = () => {\n  const { id } = useParams(); // Obtener el id del producto desde la URL\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Buscar el producto correspondiente al id\n    const foundProduct = mockProducts.find(p => p.id === parseInt(id)); \n    if (foundProduct) {\n      setProduct(foundProduct);\n      setError(null);\n    } else {\n      setError('Producto no encontrado.');\n    }\n    setLoading(false);\n  }, [id]); // Dependencia en id, para que recargue cuando cambie\n\n  if (loading) return <p>Cargando...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div className=\"item-detail\">\n      <h2>{product.name}</h2>\n      <img src={product.image} alt={product.name} />\n      <p>Precio: ${product.price}</p>\n      <p>{product.description}</p>\n    </div>\n  );\n};\n\nexport default ItemDetailContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}